version: '3.8'

services:
  db:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
    restart: always

  frontend:
    build: ./frontend
    volumes:
      - ./frontend/dist:/app/dist
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - .env
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/ssl/certificate.crt:/etc/nginx/ssl/certificate.crt
      - ./nginx/ssl/certificate.key:/etc/nginx/ssl/certificate.key
      - ./nginx/ssl/certificate_ca.crt:/etc/nginx/ssl/certificate_ca.crt
    depends_on:
      - backend
      - frontend

volumes:
  pg_data: